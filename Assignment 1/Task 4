//
//  main.c
//  UZH_Info2
//
//  Created by Yves Julien Betschmann on 20.02.20.
//  Copyright Â© 2020 Yves Julien Betschmann. All rights reserved.
//

#include <stdio.h>

int insertionSort(int A[], int length) {
    
    int i = 1, j = 0, t = 0;
    
    for (i = 1; i < length; ++i) {
        j = i;
        t = A[j];
        while (j > 0 && t < A[j - 1]) {
            A[j] = A[j - 1];
            j--;
        }
        A[j] = t;
    }
    
    return 0;
}
                  
                  
int evenOddSort(int A[], int length) {
    
    int i = 0, x = 0, y = 0, sumx = 0, sumy = 0;
    int evenA[1000], oddA[1000];
    
    insertionSort(A, length);
    for (i = 0; i < length; ++i) {
        if (A[i] % 2 == 0){
            sumx += A[i];
            evenA[x] = A[i];
            ++x;
        }
        else {
            sumy += A[i];
            oddA[y] = A[i];
            ++y;
        }
    }
    printf("Sorted even numbers: ");
    for (i = 0; i < x; ++i) {
        printf("%d, ", evenA[i]);
    }
    printf("\nSum of even numbers: %d", sumx);
    printf("\nSorted odd numbers: ");
    for (i = 0; i < x; ++i) {
        printf("%d, ", oddA[i]);
    }
    printf("\nSum of odd numbers: %d\n", sumy);
    return 0;
}

int main(){
    
    int length = 0;
    int A[1000];
    
    printf("Values of A separated by spaces (non-number to stop): ");
    while (scanf("%d", &A[length])) {
        ++length;
    }
    scanf("%*s");
    evenOddSort(A, length);
    return 0;
}
